--- a/broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java
+++ b/broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java
@@ -1358,14 +782,12 @@ public class AdminBrokerProcessor implements NettyRequestProcessor {
 
             TopicOffset topicOffset = new TopicOffset();
             long min = this.brokerController.getMessageStore().getMinOffsetInQueue(topic, i);
-            if (min < 0) {
+            if (min < 0)
                 min = 0;
-            }
 
             long max = this.brokerController.getMessageStore().getMaxOffsetInQueue(topic, i);
-            if (max < 0) {
+            if (max < 0)
                 max = 0;
-            }
 
             long timestamp = 0;
             if (max > 0) {

--- a/namesrv/src/main/java/org/apache/rocketmq/namesrv/processor/DefaultRequestProcessor.java
+++ b/namesrv/src/main/java/org/apache/rocketmq/namesrv/processor/DefaultRequestProcessor.java
@@ -565,38 +533,24 @@ public class DefaultRequestProcessor implements NettyRequestProcessor {
         RemotingCommand request) {
         final RemotingCommand response = RemotingCommand.createResponseCommand(null);
 
-        boolean enableTopicList = namesrvController.getNamesrvConfig().isEnableTopicList();
-
-        if (enableTopicList) {
         TopicList hasUnitSubTopicList = this.namesrvController.getRouteInfoManager().getHasUnitSubTopicList();
         byte[] body = hasUnitSubTopicList.encode();
+
         response.setBody(body);
         response.setCode(ResponseCode.SUCCESS);
         response.setRemark(null);
-        } else {
-            response.setCode(ResponseCode.SYSTEM_ERROR);
-            response.setRemark("disable");
-        }
-
         return response;
     }
 
     private RemotingCommand getHasUnitSubUnUnitTopicList(ChannelHandlerContext ctx, RemotingCommand request) {
         final RemotingCommand response = RemotingCommand.createResponseCommand(null);
 
-        boolean enableTopicList = namesrvController.getNamesrvConfig().isEnableTopicList();
-
-        if (enableTopicList) {
         TopicList hasUnitSubUnUnitTopicList = this.namesrvController.getRouteInfoManager().getHasUnitSubUnUnitTopicList();
         byte[] body = hasUnitSubUnUnitTopicList.encode();
+
         response.setBody(body);
         response.setCode(ResponseCode.SUCCESS);
         response.setRemark(null);
-        } else {
-            response.setCode(ResponseCode.SYSTEM_ERROR);
-            response.setRemark("disable");
-        }
-
         return response;
     }
 
@@ -627,27 +581,13 @@ public class DefaultRequestProcessor implements NettyRequestProcessor {
                 return response;
             }
 
-            this.namesrvController.getConfiguration().update(properties);
-        }
-
-        response.setCode(ResponseCode.SUCCESS);
-        response.setRemark(null);
+            if (properties.containsKey("kvConfigPath") || properties.containsKey("configStorePathName")) {
+                response.setCode(ResponseCode.NO_PERMISSION);
+                response.setRemark("Can not update config path");
                 return response;
             }
 
-    private RemotingCommand getConfig(ChannelHandlerContext ctx, RemotingCommand request) {
-        final RemotingCommand response = RemotingCommand.createResponseCommand(null);
-
-        String content = this.namesrvController.getConfiguration().getAllConfigsFormatString();
-        if (StringUtils.isNotBlank(content)) {
-            try {
-                response.setBody(content.getBytes(MixAll.DEFAULT_CHARSET));
-            } catch (UnsupportedEncodingException e) {
-                log.error("getConfig error, ", e);
-                response.setCode(ResponseCode.SYSTEM_ERROR);
-                response.setRemark("UnsupportedEncodingException " + e);
-                return response;
-            }
+            this.namesrvController.getConfiguration().update(properties);
         }
 
         response.setCode(ResponseCode.SUCCESS);
@@ -655,12 +595,11 @@ public class DefaultRequestProcessor implements NettyRequestProcessor {
         return response;
     }
 
-    private RemotingCommand getClientConfigs(ChannelHandlerContext ctx, RemotingCommand request) {
+    private RemotingCommand getConfig(ChannelHandlerContext ctx, RemotingCommand request) {
         final RemotingCommand response = RemotingCommand.createResponseCommand(null);
-        final GetRemoteClientConfigBody body = GetRemoteClientConfigBody.decode(request.getBody(), GetRemoteClientConfigBody.class);
 
-        String content = this.namesrvController.getConfiguration().getClientConfigsFormatString(body.getKeys());
-        if (StringUtils.isNotBlank(content)) {
+        String content = this.namesrvController.getConfiguration().getAllConfigsFormatString();
+        if (content != null && content.length() > 0) {
             try {
                 response.setBody(content.getBytes(MixAll.DEFAULT_CHARSET));
             } catch (UnsupportedEncodingException e) {

--- a/controller/src/main/java/org/apache/rocketmq/controller/processor/ControllerRequestProcessor.java
+++ /dev/null
