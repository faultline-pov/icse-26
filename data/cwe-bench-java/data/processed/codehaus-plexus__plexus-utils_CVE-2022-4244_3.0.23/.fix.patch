--- a/src/main/java/org/codehaus/plexus/util/Expand.java
+++ b/src/main/java/org/codehaus/plexus/util/Expand.java
@@ -126,36 +124,27 @@ protected void expandFile( File srcF, File dir )
         }
         finally
         {
-            if ( zis != null )
-            {
-                try
-                {
-                    zis.close();
-                }
-                catch ( IOException e )
-                {
-                }
-            }
+            IOUtil.close( zis );
         }
     }
 
     /**
      * Description of the Method
      */
-    protected void extractFile( File srcF,
-                                File dir,
-                                InputStream compressedInputStream,
-                                String entryName,
-                                Date entryDate,
-                                boolean isDirectory )
+    protected void extractFile( File srcF, File dir, InputStream compressedInputStream, String entryName,
+                                Date entryDate, boolean isDirectory )
         throws Exception
     {
         File f = FileUtils.resolveFile( dir, entryName );
+
+        if ( !f.getAbsolutePath().startsWith( dir.getAbsolutePath() ) )
+        {
+            throw new IOException( "Entry '" + entryName + "' outside the target directory." );
+        }
+
         try
         {
-            if ( !overwrite && f.exists()
-                &&
-                f.lastModified() >= entryDate.getTime() )
+            if ( !overwrite && f.exists() && f.lastModified() >= entryDate.getTime() )
             {
                 return;
             }
@@ -170,34 +159,22 @@ protected void extractFile( File srcF,
             }
             else
             {
-                byte[] buffer = new byte[1024];
-                int length = 0;
+                byte[] buffer = new byte[ 65536 ];
                 FileOutputStream fos = null;
                 try
                 {
                     fos = new FileOutputStream( f );
 
-                    while ( ( length =
-                        compressedInputStream.read( buffer ) ) >= 0 )
-                    {
-                        fos.write( buffer, 0, length );
-                    }
+                    for ( int length = compressedInputStream.read( buffer );
+                          length >= 0;
+                          fos.write( buffer, 0, length ), length = compressedInputStream.read( buffer ) );
 
                     fos.close();
                     fos = null;
                 }
                 finally
                 {
-                    if ( fos != null )
-                    {
-                        try
-                        {
-                            fos.close();
-                        }
-                        catch ( IOException e )
-                        {
-                        }
-                    }
+                    IOUtil.close( fos );
                 }
             }
 
